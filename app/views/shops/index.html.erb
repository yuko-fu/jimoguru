<b>
<h2 class="index-title">お店を探す</h2>

<div id="container">
  <div id="map" ></div>
  <div id="list">
    <table class="table">
      <thead class="custom-header">
        <tr>
          <th scope="col" >店名</th>
          <th scope="col" class="index_category" >カテゴリー</th>
          <th scope="col"  class="index_prefecture">都道府県</th>
          <th scope="col">住所</th>
          <th scope="col"></th>
        </tr>
      </thead>
      <tbody>
      <div class="index-bar">
        <%= form_tag shops_path, method: :get do %>
          <%= select_tag :prefecture, options_for_select(Shop.pluck(:prefecture).uniq), prompt: '都道府県で絞る' %>
          <%= select_tag :category_id, options_for_select(@categories.pluck(:name, :id)), prompt: 'カテゴリーで絞る'  %>
          <%= submit_tag '検索' %>
        <% end %>
      </div>
      <% @shops.each do |shop| %>
        <tr data-href="<%= shop_path(shop) %>">
          <td scope="col" class="shop_name"><%= shop.name %></td>
          <td scope="col" class="index_category"><%= shop.category.name %></td>
          <td scope="col" class="index_prefecture"><%= shop.prefecture %></td>
          <td scope="col"><%= shop.address %></td>
        </tr>
      <% end %>
    </table>
    <div id="pagination">
      <%= paginate @shops %>
    </div>
    <div class="index-button">
      <%= link_to 'お店新規登録', new_shop_path, data: {"turbolinks" => false} %>  
      <%= link_to 'カテゴリー一覧', categories_path, data: {"turbolinks" => false} if current_user.admin %>
    </div>
  </div>
</div>

      

<script>
function setupRowClickHandlers() {
  var rows = document.querySelectorAll("tr[data-href]");
  rows.forEach(function (row) {
    row.addEventListener("click", function () {
      window.location.href = row.dataset.href;
    });
    row.addEventListener("mouseenter", function () {
      row.style.backgroundColor = "rgba(243, 216, 134, 0.24)";
    });
    row.addEventListener("mouseleave", function () {
      row.style.backgroundColor = "";
    });
    row.querySelectorAll("a").forEach(function (link) {
      link.addEventListener("mouseenter", function (event) {
        event.stopPropagation();
        row.style.backgroundColor = "";
      });
      link.addEventListener("mouseleave", function (event) {
        event.stopPropagation();
      });
    });
  });
}

document.addEventListener("DOMContentLoaded", setupRowClickHandlers);

// Turbolinksのページ遷移に対応するための処理
document.addEventListener("turbolinks:load", setupRowClickHandlers);
</script>

    </div>  
  
      <script>
        var map;
        var markers = [];
        var infoWindows = [];
        var geocoder;
        
        // データベースから取得したマーカー情報（例：仮のデータ）
        var markerData = <%= raw @shops.to_json %>;
        var categoryName = <%= raw @category_names.to_json %>;
        

        function initMap() {
        geocoder = new google.maps.Geocoder();

        map = new google.maps.Map(document.getElementById('map'), {
          zoom: 7,
          center: { lat: 35.4550426, lng: 139.6312741 }
        });

        displayMarkers();
        }

        function displayMarkers() {
          var bounds = new google.maps.LatLngBounds();

          markerData.forEach(shop => {
            var markerLatLng = { lat: shop.latitude, lng: shop.longitude };
            var marker = new google.maps.Marker({
              position: markerLatLng,
              map: map,
              title: shop.name
            });

            bounds.extend(marker.getPosition());
            markers.push(marker);

            var infoWindow = new google.maps.InfoWindow();
            var categories = '<% @categories.pluck(:name) %>';
            
            infoWindows.push(infoWindow);

            marker.addListener('click', function () {
              closeInfoWindows();
              infoWindow.setContent(
                `<div class='info-window-content'>
                  <a href='/shops/${shop.id}' class='custom-link' style="outline: none;">${shop.name}</a>
                  <p>カテゴリー: ${categoryName[shop.category_id-1]}</p>
                  <p>住所: ${shop.address}</p>
                </div>`
              );
              infoWindow.open(map, marker);
            });
          });

          map.fitBounds(bounds);
        }

        function closeInfoWindows() {
          infoWindows.forEach(infoWindow => {
            infoWindow.close();
          });
        }
      </script>
      <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&libraries=places&callback=initMap" async defer></script> 

    </tbody>
<br>
